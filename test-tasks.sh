#!/bin/bash

# Script de teste do CRUD de Tarefas
# Como usar: chmod +x test-tasks.sh && ./test-tasks.sh

BASE_URL="http://localhost:3000"
echo "üöÄ Testando CRUD de Tarefas na API..."
echo "Base URL: $BASE_URL"
echo ""

# 1. Health Check
echo "1Ô∏è‚É£  Health Check"
curl -s $BASE_URL/ | jq
echo ""

# 2. Cadastrar usu√°rio
echo "2Ô∏è‚É£  Cadastrando usu√°rio de teste..."
REGISTER_RESPONSE=$(curl -s -X POST $BASE_URL/api/register \
  -H 'Content-Type: application/json' \
  -d '{
    "name": "Teste Tasks",
    "email": "teste.tasks@example.com",
    "password": "senha123"
  }')
echo $REGISTER_RESPONSE | jq
echo ""

# 3. Fazer login
echo "3Ô∏è‚É£  Fazendo login..."
LOGIN_RESPONSE=$(curl -s -X POST $BASE_URL/api/login \
  -H 'Content-Type: application/json' \
  -d '{
    "email": "teste.tasks@example.com",
    "password": "senha123"
  }')
TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.token')
echo "Token: ${TOKEN:0:50}..."
echo ""

if [ "$TOKEN" == "null" ] || [ -z "$TOKEN" ]; then
  echo "‚ùå Falha ao obter token. Tentando login com usu√°rio existente..."
  LOGIN_RESPONSE=$(curl -s -X POST $BASE_URL/api/login \
    -H 'Content-Type: application/json' \
    -d '{
      "email": "teste.tasks@example.com",
      "password": "senha123"
    }')
  TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.token')
fi

# 4. Criar primeira tarefa
echo "4Ô∏è‚É£  Criando primeira tarefa..."
CREATE_RESPONSE=$(curl -s -X POST $BASE_URL/api/tasks \
  -H "Authorization: Bearer $TOKEN" \
  -H 'Content-Type: application/json' \
  -d '{
    "title": "Estudar Node.js",
    "description": "Revisar Express e MongoDB",
    "status": "pending",
    "priority": "high",
    "tags": ["estudos", "backend"]
  }')
echo $CREATE_RESPONSE | jq
TASK_ID=$(echo $CREATE_RESPONSE | jq -r '.task._id')
echo "Task ID: $TASK_ID"
echo ""

# 5. Criar segunda tarefa
echo "5Ô∏è‚É£  Criando segunda tarefa..."
curl -s -X POST $BASE_URL/api/tasks \
  -H "Authorization: Bearer $TOKEN" \
  -H 'Content-Type: application/json' \
  -d '{
    "title": "Comprar leite",
    "priority": "low"
  }' | jq
echo ""

# 6. Listar todas as tarefas
echo "6Ô∏è‚É£  Listando todas as tarefas..."
curl -s $BASE_URL/api/tasks \
  -H "Authorization: Bearer $TOKEN" | jq
echo ""

# 7. Buscar tarefa por ID
echo "7Ô∏è‚É£  Buscando tarefa por ID ($TASK_ID)..."
curl -s $BASE_URL/api/tasks/$TASK_ID \
  -H "Authorization: Bearer $TOKEN" | jq
echo ""

# 8. Atualizar parcialmente (PATCH)
echo "8Ô∏è‚É£  Atualizando status para 'in_progress' (PATCH)..."
curl -s -X PATCH $BASE_URL/api/tasks/$TASK_ID \
  -H "Authorization: Bearer $TOKEN" \
  -H 'Content-Type: application/json' \
  -d '{"status": "in_progress"}' | jq
echo ""

# 9. Atualizar completamente (PUT)
echo "9Ô∏è‚É£  Atualizando tarefa completamente (PUT)..."
curl -s -X PUT $BASE_URL/api/tasks/$TASK_ID \
  -H "Authorization: Bearer $TOKEN" \
  -H 'Content-Type: application/json' \
  -d '{
    "title": "Estudar Node.js - Completo",
    "description": "Revisar Express, MongoDB e JWT",
    "status": "completed",
    "priority": "urgent"
  }' | jq
echo ""

# 10. Listar com filtro
echo "üîü Listando tarefas com status=completed..."
curl -s "$BASE_URL/api/tasks?status=completed" \
  -H "Authorization: Bearer $TOKEN" | jq
echo ""

# 11. Estat√≠sticas
echo "1Ô∏è‚É£1Ô∏è‚É£ Obtendo estat√≠sticas..."
curl -s $BASE_URL/api/tasks/stats \
  -H "Authorization: Bearer $TOKEN" | jq
echo ""

# 12. Deletar tarefa
echo "1Ô∏è‚É£2Ô∏è‚É£ Deletando tarefa ($TASK_ID)..."
curl -s -X DELETE $BASE_URL/api/tasks/$TASK_ID \
  -H "Authorization: Bearer $TOKEN" | jq
echo ""

# 13. Tentar acessar sem token (deve dar 401)
echo "1Ô∏è‚É£3Ô∏è‚É£ Testando acesso SEM token (deve retornar 401)..."
curl -s -i $BASE_URL/api/tasks | head -n 1
echo ""

# 14. Tentar acessar com token inv√°lido (deve dar 401)
echo "1Ô∏è‚É£4Ô∏è‚É£ Testando acesso com token INV√ÅLIDO (deve retornar 401)..."
curl -s -i $BASE_URL/api/tasks \
  -H "Authorization: Bearer token_invalido_xyz" | head -n 1
echo ""

echo "‚úÖ Testes conclu√≠dos!"
