{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
    "name": "Backend JWT - Atividade Fullstack Unidade 2",
    "description": "Collection completa para testar API de autenticação JWT com MongoDB",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Cadastro (Register)",
      "item": [
        {
          "name": "✅ Cadastro Bem-Sucedido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"João Silva\",\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"senha123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Cadastro com dados válidos. Deve retornar status 201."
          },
          "response": []
        },
        {
          "name": "❌ Cadastro - Email Repetido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Maria Santos\",\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"senha456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Tentativa de cadastro com email já existente. Deve retornar status 400 ou 422."
          },
          "response": []
        },
        {
          "name": "❌ Cadastro - Senha Inválida (< 6 caracteres)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Pedro Costa\",\n  \"email\": \"pedro.costa@example.com\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Senha com menos de 6 caracteres. Deve retornar status 422."
          },
          "response": []
        },
        {
          "name": "❌ Cadastro - Email Inválido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Ana Lima\",\n  \"email\": \"email-sem-arroba\",\n  \"password\": \"senha789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Email em formato inválido (sem @). Deve retornar status 422."
          },
          "response": []
        },
        {
          "name": "❌ Cadastro - Requisição Mal Formatada",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Carlos Souza\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Requisição sem campos obrigatórios (email e password faltando). Deve retornar status 400 ou 422."
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. Login",
      "item": [
        {
          "name": "✅ Login Bem-Sucedido",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Salva o token JWT automaticamente na variável de ambiente",
                  "var jsonData = pm.response.json();",
                  "if (jsonData.token) {",
                  "    pm.environment.set(\"auth_token\", jsonData.token);",
                  "    console.log(\"Token JWT salvo: \" + jsonData.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"senha123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            },
            "description": "Login com credenciais válidas. Deve retornar status 200 e token JWT. O token é salvo automaticamente na variável {{auth_token}}."
          },
          "response": []
        },
        {
          "name": "❌ Login - Credenciais Inválidas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"senhaErrada123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            },
            "description": "Login com senha incorreta. Deve retornar status 401."
          },
          "response": []
        },
        {
          "name": "❌ Login - Senha Inválida (Formato)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"abc\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            },
            "description": "Login com senha em formato inválido (< 6 caracteres). Deve retornar status 422."
          },
          "response": []
        },
        {
          "name": "❌ Login - Email Inválido (Formato)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"email-sem-arroba\",\n  \"password\": \"senha123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            },
            "description": "Login com email em formato inválido. Deve retornar status 422."
          },
          "response": []
        },
        {
          "name": "❌ Login - Requisição Mal Formatada",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"joao.silva@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/login",
              "host": ["{{base_url}}"],
              "path": ["api", "login"]
            },
            "description": "Login sem campo obrigatório (password faltando). Deve retornar status 400 ou 422."
          },
          "response": []
        }
      ]
    },
    {
      "name": "3. Rota Protegida (Protected)",
      "item": [
        {
          "name": "✅ Acesso com Token Válido",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/protected",
              "host": ["{{base_url}}"],
              "path": ["api", "protected"]
            },
            "description": "Acesso à rota protegida com token JWT válido. Usa o token salvo em {{auth_token}}. Deve retornar status 200."
          },
          "response": []
        },
        {
          "name": "❌ Acesso SEM Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/protected",
              "host": ["{{base_url}}"],
              "path": ["api", "protected"]
            },
            "description": "Tentativa de acesso sem enviar token JWT. Deve retornar status 401."
          },
          "response": []
        },
        {
          "name": "❌ Acesso com Token Inválido",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "token_jwt_invalido_12345",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/protected",
              "host": ["{{base_url}}"],
              "path": ["api", "protected"]
            },
            "description": "Tentativa de acesso com token JWT inválido/malformado. Deve retornar status 401."
          },
          "response": []
        }
      ]
    },
    {
      "name": "0. Health Check",
      "item": [
        {
          "name": "✅ Health Check - API Rodando",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Verifica se a API está funcionando. Deve retornar status 200 com mensagem de sucesso."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ]
}
